-- démarrer une transaction afin d'être sûr que tout a été executé
BEGIN;

-- Suppression des tables existantes

DROP TABLE IF EXISTS "list", "card", "label", "card_has_label";

-- Création des tables

CREATE TABLE "list" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
  "name" TEXT NOT NULL, 
  "position" INTEGER NOT NULL,
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "card" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
  "text" TEXT NOT NULL, 
  "position" INTEGER NOT NULL DEFAULT 0, 
  "colour" TEXT,
  -- supprime la carte quand la liste est supprimée
  "list_id" INTEGER NOT NULL REFERENCES "list"("id") ON DELETE CASCADE, 
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "label" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
  "name" TEXT NOT NULL UNIQUE, 
  "colour" TEXT,
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "card_has_label" (
  "card_id" INTEGER NOT NULL REFERENCES "card"("id") ON DELETE CASCADE,
  "label_id" INTEGER NOT NULL REFERENCES "label"("id") ON DELETE CASCADE,
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  -- Contrainte pour avoir une seule carte par paire de clefs carte-label
  UNIQUE ("card_id", "label_id") 
);

-- Seeding

INSERT INTO "list"("name","position")
VALUES  ('Première liste',0), 
        ('Seconde liste',1);

INSERT INTO "card"("text","list_id")
VALUES  ('Première carte',1), 
        ('Seconde carte',1), 
        ('Troisième carte',2);

INSERT INTO "label"("name")
VALUES  ('Important');

INSERT INTO "card_has_label"("card_id", "label_id")
VALUES  (2,1);

COMMIT;